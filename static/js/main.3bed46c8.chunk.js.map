{"version":3,"sources":["chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","App.js","reportWebVitals.js","index.js"],"names":["config","botName","initialMessages","createChatBotMessage","ActionProvider","setStateFunc","createClientMessage","greet","message","addMessageToState","setState","prevState","messages","this","MessageParser","actionProvider","state","console","log","App","className","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAQeA,EALA,CACXC,QAAS,aACTC,gBAAiB,CAACC,+BAAqB,uB,qBCiB5BC,EApBX,WAAYD,EAAsBE,EAAcC,GAAsB,IAAD,gCAMrEC,MAAQ,WACJ,IAAMC,EAAU,EAAKL,qBAAqB,mDAC1C,EAAKM,kBAAkBD,IAR0C,KAWrEC,kBAAoB,SAACD,GACjB,EAAKE,UAAS,SAACC,GAAD,mBAAC,eACRA,GADO,IAEVC,SAAS,GAAD,mBAAMD,EAAUC,UAAhB,CAA0BJ,UAbtCK,KAAKV,qBAAuBA,EAC5BU,KAAKH,SAAWL,EAChBQ,KAAKP,oBAAsBA,G,OCUpBQ,E,WAZb,WAAYC,EAAgBC,GAAQ,oBAClCH,KAAKE,eAAiBA,EACtBF,KAAKG,MAAQA,E,yCAGf,SAAMR,GACJS,QAAQC,IAAI,eAAiBV,GAE7BK,KAAKE,eAAeR,Y,YCUTY,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CACEpB,OAAQA,EACRe,eAAgBX,EAChBiB,cAAeP,SCFVQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bed46c8.chunk.js","sourcesContent":["// Config starter code\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nconst config = {\r\n    botName: \"BlenderBot\",\r\n    initialMessages: [createChatBotMessage(`Hi! Talk to me :D`)]\r\n}\r\n\r\nexport default config","// ActionProvider starter code\r\nclass ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n        this.createChatBotMessage = createChatBotMessage;\r\n        this.setState = setStateFunc;\r\n        this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    greet = () => {\r\n        const message = this.createChatBotMessage(\"Sorry, I am not connected to the backend yet :(\");\r\n        this.addMessageToState(message);\r\n    };\r\n\r\n    addMessageToState = (message) => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            messages: [...prevState.messages, message],\r\n        }));\r\n    };\r\n}\r\n\r\n\r\nexport default ActionProvider;","\r\n\r\nclass MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n\r\n  parse(message) {\r\n    console.log(\"user input: \" + message)\r\n\r\n    this.actionProvider.greet();\r\n  }\r\n}\r\n\r\nexport default MessageParser;","// import logo from './logo.svg';\nimport './App.css';\nimport Chatbot from \"react-chatbot-kit\";\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/MessageParser\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}